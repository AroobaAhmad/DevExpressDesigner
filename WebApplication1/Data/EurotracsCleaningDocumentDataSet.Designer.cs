//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace WebApplication1.Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("EurotracsCleaningDocumentDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class EurotracsCleaningDocumentDataSet : global::System.Data.DataSet {
        
        private spEurotracsCleaningDocumentCompartmentSelectDataTable tablespEurotracsCleaningDocumentCompartmentSelect;
        
        private spEurotracsCleaningDocumentSelectDataTable tablespEurotracsCleaningDocumentSelect;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public EurotracsCleaningDocumentDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [System.ObsoleteAttribute("This API supports obsolete formatter-based serialization. It should not be called" +
            " or extended by application code.", DiagnosticId="SYSLIB0051")]
        protected EurotracsCleaningDocumentDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["spEurotracsCleaningDocumentCompartmentSelect"] != null)) {
                    base.Tables.Add(new spEurotracsCleaningDocumentCompartmentSelectDataTable(ds.Tables["spEurotracsCleaningDocumentCompartmentSelect"]));
                }
                if ((ds.Tables["spEurotracsCleaningDocumentSelect"] != null)) {
                    base.Tables.Add(new spEurotracsCleaningDocumentSelectDataTable(ds.Tables["spEurotracsCleaningDocumentSelect"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spEurotracsCleaningDocumentCompartmentSelectDataTable spEurotracsCleaningDocumentCompartmentSelect {
            get {
                return this.tablespEurotracsCleaningDocumentCompartmentSelect;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spEurotracsCleaningDocumentSelectDataTable spEurotracsCleaningDocumentSelect {
            get {
                return this.tablespEurotracsCleaningDocumentSelect;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            EurotracsCleaningDocumentDataSet cln = ((EurotracsCleaningDocumentDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["spEurotracsCleaningDocumentCompartmentSelect"] != null)) {
                    base.Tables.Add(new spEurotracsCleaningDocumentCompartmentSelectDataTable(ds.Tables["spEurotracsCleaningDocumentCompartmentSelect"]));
                }
                if ((ds.Tables["spEurotracsCleaningDocumentSelect"] != null)) {
                    base.Tables.Add(new spEurotracsCleaningDocumentSelectDataTable(ds.Tables["spEurotracsCleaningDocumentSelect"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablespEurotracsCleaningDocumentCompartmentSelect = ((spEurotracsCleaningDocumentCompartmentSelectDataTable)(base.Tables["spEurotracsCleaningDocumentCompartmentSelect"]));
            if ((initTable == true)) {
                if ((this.tablespEurotracsCleaningDocumentCompartmentSelect != null)) {
                    this.tablespEurotracsCleaningDocumentCompartmentSelect.InitVars();
                }
            }
            this.tablespEurotracsCleaningDocumentSelect = ((spEurotracsCleaningDocumentSelectDataTable)(base.Tables["spEurotracsCleaningDocumentSelect"]));
            if ((initTable == true)) {
                if ((this.tablespEurotracsCleaningDocumentSelect != null)) {
                    this.tablespEurotracsCleaningDocumentSelect.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "EurotracsCleaningDocumentDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/EurotracsCleaningDocumentDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablespEurotracsCleaningDocumentCompartmentSelect = new spEurotracsCleaningDocumentCompartmentSelectDataTable();
            base.Tables.Add(this.tablespEurotracsCleaningDocumentCompartmentSelect);
            this.tablespEurotracsCleaningDocumentSelect = new spEurotracsCleaningDocumentSelectDataTable();
            base.Tables.Add(this.tablespEurotracsCleaningDocumentSelect);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializespEurotracsCleaningDocumentCompartmentSelect() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializespEurotracsCleaningDocumentSelect() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            EurotracsCleaningDocumentDataSet ds = new EurotracsCleaningDocumentDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void spEurotracsCleaningDocumentCompartmentSelectRowChangeEventHandler(object sender, spEurotracsCleaningDocumentCompartmentSelectRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void spEurotracsCleaningDocumentSelectRowChangeEventHandler(object sender, spEurotracsCleaningDocumentSelectRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spEurotracsCleaningDocumentCompartmentSelectDataTable : global::System.Data.TypedTableBase<spEurotracsCleaningDocumentCompartmentSelectRow> {
            
            private global::System.Data.DataColumn columnCleaningOrderCompartmentInfoID;
            
            private global::System.Data.DataColumn columnCleaningOrderID;
            
            private global::System.Data.DataColumn columnCompanyID;
            
            private global::System.Data.DataColumn columnCompartmentNumber;
            
            private global::System.Data.DataColumn columnProductMin1Name;
            
            private global::System.Data.DataColumn columnProductMin2Name;
            
            private global::System.Data.DataColumn columnProductMin3Name;
            
            private global::System.Data.DataColumn columnUnNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public spEurotracsCleaningDocumentCompartmentSelectDataTable() {
                this.TableName = "spEurotracsCleaningDocumentCompartmentSelect";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal spEurotracsCleaningDocumentCompartmentSelectDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [System.ObsoleteAttribute("This API supports obsolete formatter-based serialization. It should not be called" +
                " or extended by application code.", DiagnosticId="SYSLIB0051")]
            protected spEurotracsCleaningDocumentCompartmentSelectDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CleaningOrderCompartmentInfoIDColumn {
                get {
                    return this.columnCleaningOrderCompartmentInfoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CleaningOrderIDColumn {
                get {
                    return this.columnCleaningOrderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CompanyIDColumn {
                get {
                    return this.columnCompanyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CompartmentNumberColumn {
                get {
                    return this.columnCompartmentNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ProductMin1NameColumn {
                get {
                    return this.columnProductMin1Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ProductMin2NameColumn {
                get {
                    return this.columnProductMin2Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ProductMin3NameColumn {
                get {
                    return this.columnProductMin3Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn UnNumberColumn {
                get {
                    return this.columnUnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public spEurotracsCleaningDocumentCompartmentSelectRow this[int index] {
                get {
                    return ((spEurotracsCleaningDocumentCompartmentSelectRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event spEurotracsCleaningDocumentCompartmentSelectRowChangeEventHandler spEurotracsCleaningDocumentCompartmentSelectRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event spEurotracsCleaningDocumentCompartmentSelectRowChangeEventHandler spEurotracsCleaningDocumentCompartmentSelectRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event spEurotracsCleaningDocumentCompartmentSelectRowChangeEventHandler spEurotracsCleaningDocumentCompartmentSelectRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event spEurotracsCleaningDocumentCompartmentSelectRowChangeEventHandler spEurotracsCleaningDocumentCompartmentSelectRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddspEurotracsCleaningDocumentCompartmentSelectRow(spEurotracsCleaningDocumentCompartmentSelectRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public spEurotracsCleaningDocumentCompartmentSelectRow AddspEurotracsCleaningDocumentCompartmentSelectRow(int CleaningOrderID, short CompanyID, byte CompartmentNumber, string ProductMin1Name, string ProductMin2Name, string ProductMin3Name, string UnNumber) {
                spEurotracsCleaningDocumentCompartmentSelectRow rowspEurotracsCleaningDocumentCompartmentSelectRow = ((spEurotracsCleaningDocumentCompartmentSelectRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CleaningOrderID,
                        CompanyID,
                        CompartmentNumber,
                        ProductMin1Name,
                        ProductMin2Name,
                        ProductMin3Name,
                        UnNumber};
                rowspEurotracsCleaningDocumentCompartmentSelectRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspEurotracsCleaningDocumentCompartmentSelectRow);
                return rowspEurotracsCleaningDocumentCompartmentSelectRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public spEurotracsCleaningDocumentCompartmentSelectRow FindByCleaningOrderCompartmentInfoID(int CleaningOrderCompartmentInfoID) {
                return ((spEurotracsCleaningDocumentCompartmentSelectRow)(this.Rows.Find(new object[] {
                            CleaningOrderCompartmentInfoID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                spEurotracsCleaningDocumentCompartmentSelectDataTable cln = ((spEurotracsCleaningDocumentCompartmentSelectDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spEurotracsCleaningDocumentCompartmentSelectDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnCleaningOrderCompartmentInfoID = base.Columns["CleaningOrderCompartmentInfoID"];
                this.columnCleaningOrderID = base.Columns["CleaningOrderID"];
                this.columnCompanyID = base.Columns["CompanyID"];
                this.columnCompartmentNumber = base.Columns["CompartmentNumber"];
                this.columnProductMin1Name = base.Columns["ProductMin1Name"];
                this.columnProductMin2Name = base.Columns["ProductMin2Name"];
                this.columnProductMin3Name = base.Columns["ProductMin3Name"];
                this.columnUnNumber = base.Columns["UnNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnCleaningOrderCompartmentInfoID = new global::System.Data.DataColumn("CleaningOrderCompartmentInfoID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCleaningOrderCompartmentInfoID);
                this.columnCleaningOrderID = new global::System.Data.DataColumn("CleaningOrderID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCleaningOrderID);
                this.columnCompanyID = new global::System.Data.DataColumn("CompanyID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyID);
                this.columnCompartmentNumber = new global::System.Data.DataColumn("CompartmentNumber", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompartmentNumber);
                this.columnProductMin1Name = new global::System.Data.DataColumn("ProductMin1Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductMin1Name);
                this.columnProductMin2Name = new global::System.Data.DataColumn("ProductMin2Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductMin2Name);
                this.columnProductMin3Name = new global::System.Data.DataColumn("ProductMin3Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductMin3Name);
                this.columnUnNumber = new global::System.Data.DataColumn("UnNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnNumber);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCleaningOrderCompartmentInfoID}, true));
                this.columnCleaningOrderCompartmentInfoID.AutoIncrement = true;
                this.columnCleaningOrderCompartmentInfoID.AllowDBNull = false;
                this.columnCleaningOrderCompartmentInfoID.ReadOnly = true;
                this.columnCleaningOrderCompartmentInfoID.Unique = true;
                this.columnCleaningOrderID.AllowDBNull = false;
                this.columnCompanyID.AllowDBNull = false;
                this.columnCompartmentNumber.AllowDBNull = false;
                this.columnProductMin1Name.MaxLength = 50;
                this.columnProductMin2Name.MaxLength = 50;
                this.columnProductMin3Name.MaxLength = 50;
                this.columnUnNumber.MaxLength = 4;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public spEurotracsCleaningDocumentCompartmentSelectRow NewspEurotracsCleaningDocumentCompartmentSelectRow() {
                return ((spEurotracsCleaningDocumentCompartmentSelectRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spEurotracsCleaningDocumentCompartmentSelectRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(spEurotracsCleaningDocumentCompartmentSelectRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spEurotracsCleaningDocumentCompartmentSelectRowChanged != null)) {
                    this.spEurotracsCleaningDocumentCompartmentSelectRowChanged(this, new spEurotracsCleaningDocumentCompartmentSelectRowChangeEvent(((spEurotracsCleaningDocumentCompartmentSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spEurotracsCleaningDocumentCompartmentSelectRowChanging != null)) {
                    this.spEurotracsCleaningDocumentCompartmentSelectRowChanging(this, new spEurotracsCleaningDocumentCompartmentSelectRowChangeEvent(((spEurotracsCleaningDocumentCompartmentSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spEurotracsCleaningDocumentCompartmentSelectRowDeleted != null)) {
                    this.spEurotracsCleaningDocumentCompartmentSelectRowDeleted(this, new spEurotracsCleaningDocumentCompartmentSelectRowChangeEvent(((spEurotracsCleaningDocumentCompartmentSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spEurotracsCleaningDocumentCompartmentSelectRowDeleting != null)) {
                    this.spEurotracsCleaningDocumentCompartmentSelectRowDeleting(this, new spEurotracsCleaningDocumentCompartmentSelectRowChangeEvent(((spEurotracsCleaningDocumentCompartmentSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemovespEurotracsCleaningDocumentCompartmentSelectRow(spEurotracsCleaningDocumentCompartmentSelectRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EurotracsCleaningDocumentDataSet ds = new EurotracsCleaningDocumentDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spEurotracsCleaningDocumentCompartmentSelectDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spEurotracsCleaningDocumentSelectDataTable : global::System.Data.TypedTableBase<spEurotracsCleaningDocumentSelectRow> {
            
            private global::System.Data.DataColumn columnCleaningOrderID;
            
            private global::System.Data.DataColumn columnCompanyID;
            
            private global::System.Data.DataColumn columnCleaningOrderReference;
            
            private global::System.Data.DataColumn columnReference;
            
            private global::System.Data.DataColumn columnCleaningStationID;
            
            private global::System.Data.DataColumn columnCleaningStationName;
            
            private global::System.Data.DataColumn columnCleaningDriverID;
            
            private global::System.Data.DataColumn columnCleaningDriverFullName;
            
            private global::System.Data.DataColumn columnCleaningStartDate;
            
            private global::System.Data.DataColumn columnCleaningStopDate;
            
            private global::System.Data.DataColumn columnCleaningUserID;
            
            private global::System.Data.DataColumn columnCleaningUserFullName;
            
            private global::System.Data.DataColumn columnSeals;
            
            private global::System.Data.DataColumn columnCO2;
            
            private global::System.Data.DataColumn columnRemark;
            
            private global::System.Data.DataColumn columnIsMilliport;
            
            private global::System.Data.DataColumn columnIsAtp;
            
            private global::System.Data.DataColumn columnIsAllertec;
            
            private global::System.Data.DataColumn columnNatureOfProduct;
            
            private global::System.Data.DataColumn columnNewProductName;
            
            private global::System.Data.DataColumn columnCleaningTruckInfo;
            
            private global::System.Data.DataColumn columnCleaningContainerTrailerInfo;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnCustomerStreet;
            
            private global::System.Data.DataColumn columnCustomerCity;
            
            private global::System.Data.DataColumn columnProcedureEftcoItems;
            
            private global::System.Data.DataColumn columnExtraEftcoItems;
            
            private global::System.Data.DataColumn columnAtpResult;
            
            private global::System.Data.DataColumn columnAtpLocationID;
            
            private global::System.Data.DataColumn columnAtpLocationName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public spEurotracsCleaningDocumentSelectDataTable() {
                this.TableName = "spEurotracsCleaningDocumentSelect";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal spEurotracsCleaningDocumentSelectDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [System.ObsoleteAttribute("This API supports obsolete formatter-based serialization. It should not be called" +
                " or extended by application code.", DiagnosticId="SYSLIB0051")]
            protected spEurotracsCleaningDocumentSelectDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CleaningOrderIDColumn {
                get {
                    return this.columnCleaningOrderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CompanyIDColumn {
                get {
                    return this.columnCompanyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CleaningOrderReferenceColumn {
                get {
                    return this.columnCleaningOrderReference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ReferenceColumn {
                get {
                    return this.columnReference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CleaningStationIDColumn {
                get {
                    return this.columnCleaningStationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CleaningStationNameColumn {
                get {
                    return this.columnCleaningStationName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CleaningDriverIDColumn {
                get {
                    return this.columnCleaningDriverID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CleaningDriverFullNameColumn {
                get {
                    return this.columnCleaningDriverFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CleaningStartDateColumn {
                get {
                    return this.columnCleaningStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CleaningStopDateColumn {
                get {
                    return this.columnCleaningStopDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CleaningUserIDColumn {
                get {
                    return this.columnCleaningUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CleaningUserFullNameColumn {
                get {
                    return this.columnCleaningUserFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SealsColumn {
                get {
                    return this.columnSeals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CO2Column {
                get {
                    return this.columnCO2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IsMilliportColumn {
                get {
                    return this.columnIsMilliport;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IsAtpColumn {
                get {
                    return this.columnIsAtp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IsAllertecColumn {
                get {
                    return this.columnIsAllertec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NatureOfProductColumn {
                get {
                    return this.columnNatureOfProduct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NewProductNameColumn {
                get {
                    return this.columnNewProductName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CleaningTruckInfoColumn {
                get {
                    return this.columnCleaningTruckInfo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CleaningContainerTrailerInfoColumn {
                get {
                    return this.columnCleaningContainerTrailerInfo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CustomerStreetColumn {
                get {
                    return this.columnCustomerStreet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CustomerCityColumn {
                get {
                    return this.columnCustomerCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ProcedureEftcoItemsColumn {
                get {
                    return this.columnProcedureEftcoItems;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ExtraEftcoItemsColumn {
                get {
                    return this.columnExtraEftcoItems;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AtpResultColumn {
                get {
                    return this.columnAtpResult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AtpLocationIDColumn {
                get {
                    return this.columnAtpLocationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AtpLocationNameColumn {
                get {
                    return this.columnAtpLocationName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public spEurotracsCleaningDocumentSelectRow this[int index] {
                get {
                    return ((spEurotracsCleaningDocumentSelectRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event spEurotracsCleaningDocumentSelectRowChangeEventHandler spEurotracsCleaningDocumentSelectRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event spEurotracsCleaningDocumentSelectRowChangeEventHandler spEurotracsCleaningDocumentSelectRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event spEurotracsCleaningDocumentSelectRowChangeEventHandler spEurotracsCleaningDocumentSelectRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event spEurotracsCleaningDocumentSelectRowChangeEventHandler spEurotracsCleaningDocumentSelectRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddspEurotracsCleaningDocumentSelectRow(spEurotracsCleaningDocumentSelectRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public spEurotracsCleaningDocumentSelectRow AddspEurotracsCleaningDocumentSelectRow(
                        short CompanyID, 
                        string CleaningOrderReference, 
                        string Reference, 
                        int CleaningStationID, 
                        string CleaningStationName, 
                        int CleaningDriverID, 
                        string CleaningDriverFullName, 
                        System.DateTime CleaningStartDate, 
                        System.DateTime CleaningStopDate, 
                        long CleaningUserID, 
                        string CleaningUserFullName, 
                        string Seals, 
                        decimal CO2, 
                        string Remark, 
                        bool IsMilliport, 
                        bool IsAtp, 
                        bool IsAllertec, 
                        string NatureOfProduct, 
                        string NewProductName, 
                        string CleaningTruckInfo, 
                        string CleaningContainerTrailerInfo, 
                        string CustomerName, 
                        string CustomerStreet, 
                        string CustomerCity, 
                        string ProcedureEftcoItems, 
                        string ExtraEftcoItems, 
                        decimal AtpResult, 
                        byte AtpLocationID, 
                        string AtpLocationName) {
                spEurotracsCleaningDocumentSelectRow rowspEurotracsCleaningDocumentSelectRow = ((spEurotracsCleaningDocumentSelectRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CompanyID,
                        CleaningOrderReference,
                        Reference,
                        CleaningStationID,
                        CleaningStationName,
                        CleaningDriverID,
                        CleaningDriverFullName,
                        CleaningStartDate,
                        CleaningStopDate,
                        CleaningUserID,
                        CleaningUserFullName,
                        Seals,
                        CO2,
                        Remark,
                        IsMilliport,
                        IsAtp,
                        IsAllertec,
                        NatureOfProduct,
                        NewProductName,
                        CleaningTruckInfo,
                        CleaningContainerTrailerInfo,
                        CustomerName,
                        CustomerStreet,
                        CustomerCity,
                        ProcedureEftcoItems,
                        ExtraEftcoItems,
                        AtpResult,
                        AtpLocationID,
                        AtpLocationName};
                rowspEurotracsCleaningDocumentSelectRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspEurotracsCleaningDocumentSelectRow);
                return rowspEurotracsCleaningDocumentSelectRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public spEurotracsCleaningDocumentSelectRow FindByCleaningOrderID(int CleaningOrderID) {
                return ((spEurotracsCleaningDocumentSelectRow)(this.Rows.Find(new object[] {
                            CleaningOrderID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                spEurotracsCleaningDocumentSelectDataTable cln = ((spEurotracsCleaningDocumentSelectDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spEurotracsCleaningDocumentSelectDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnCleaningOrderID = base.Columns["CleaningOrderID"];
                this.columnCompanyID = base.Columns["CompanyID"];
                this.columnCleaningOrderReference = base.Columns["CleaningOrderReference"];
                this.columnReference = base.Columns["Reference"];
                this.columnCleaningStationID = base.Columns["CleaningStationID"];
                this.columnCleaningStationName = base.Columns["CleaningStationName"];
                this.columnCleaningDriverID = base.Columns["CleaningDriverID"];
                this.columnCleaningDriverFullName = base.Columns["CleaningDriverFullName"];
                this.columnCleaningStartDate = base.Columns["CleaningStartDate"];
                this.columnCleaningStopDate = base.Columns["CleaningStopDate"];
                this.columnCleaningUserID = base.Columns["CleaningUserID"];
                this.columnCleaningUserFullName = base.Columns["CleaningUserFullName"];
                this.columnSeals = base.Columns["Seals"];
                this.columnCO2 = base.Columns["CO2"];
                this.columnRemark = base.Columns["Remark"];
                this.columnIsMilliport = base.Columns["IsMilliport"];
                this.columnIsAtp = base.Columns["IsAtp"];
                this.columnIsAllertec = base.Columns["IsAllertec"];
                this.columnNatureOfProduct = base.Columns["NatureOfProduct"];
                this.columnNewProductName = base.Columns["NewProductName"];
                this.columnCleaningTruckInfo = base.Columns["CleaningTruckInfo"];
                this.columnCleaningContainerTrailerInfo = base.Columns["CleaningContainerTrailerInfo"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnCustomerStreet = base.Columns["CustomerStreet"];
                this.columnCustomerCity = base.Columns["CustomerCity"];
                this.columnProcedureEftcoItems = base.Columns["ProcedureEftcoItems"];
                this.columnExtraEftcoItems = base.Columns["ExtraEftcoItems"];
                this.columnAtpResult = base.Columns["AtpResult"];
                this.columnAtpLocationID = base.Columns["AtpLocationID"];
                this.columnAtpLocationName = base.Columns["AtpLocationName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnCleaningOrderID = new global::System.Data.DataColumn("CleaningOrderID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCleaningOrderID);
                this.columnCompanyID = new global::System.Data.DataColumn("CompanyID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyID);
                this.columnCleaningOrderReference = new global::System.Data.DataColumn("CleaningOrderReference", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCleaningOrderReference);
                this.columnReference = new global::System.Data.DataColumn("Reference", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReference);
                this.columnCleaningStationID = new global::System.Data.DataColumn("CleaningStationID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCleaningStationID);
                this.columnCleaningStationName = new global::System.Data.DataColumn("CleaningStationName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCleaningStationName);
                this.columnCleaningDriverID = new global::System.Data.DataColumn("CleaningDriverID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCleaningDriverID);
                this.columnCleaningDriverFullName = new global::System.Data.DataColumn("CleaningDriverFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCleaningDriverFullName);
                this.columnCleaningStartDate = new global::System.Data.DataColumn("CleaningStartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCleaningStartDate);
                this.columnCleaningStopDate = new global::System.Data.DataColumn("CleaningStopDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCleaningStopDate);
                this.columnCleaningUserID = new global::System.Data.DataColumn("CleaningUserID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCleaningUserID);
                this.columnCleaningUserFullName = new global::System.Data.DataColumn("CleaningUserFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCleaningUserFullName);
                this.columnSeals = new global::System.Data.DataColumn("Seals", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeals);
                this.columnCO2 = new global::System.Data.DataColumn("CO2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCO2);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnIsMilliport = new global::System.Data.DataColumn("IsMilliport", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsMilliport);
                this.columnIsAtp = new global::System.Data.DataColumn("IsAtp", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsAtp);
                this.columnIsAllertec = new global::System.Data.DataColumn("IsAllertec", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsAllertec);
                this.columnNatureOfProduct = new global::System.Data.DataColumn("NatureOfProduct", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNatureOfProduct);
                this.columnNewProductName = new global::System.Data.DataColumn("NewProductName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewProductName);
                this.columnCleaningTruckInfo = new global::System.Data.DataColumn("CleaningTruckInfo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCleaningTruckInfo);
                this.columnCleaningContainerTrailerInfo = new global::System.Data.DataColumn("CleaningContainerTrailerInfo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCleaningContainerTrailerInfo);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnCustomerStreet = new global::System.Data.DataColumn("CustomerStreet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerStreet);
                this.columnCustomerCity = new global::System.Data.DataColumn("CustomerCity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCity);
                this.columnProcedureEftcoItems = new global::System.Data.DataColumn("ProcedureEftcoItems", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProcedureEftcoItems);
                this.columnExtraEftcoItems = new global::System.Data.DataColumn("ExtraEftcoItems", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraEftcoItems);
                this.columnAtpResult = new global::System.Data.DataColumn("AtpResult", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAtpResult);
                this.columnAtpLocationID = new global::System.Data.DataColumn("AtpLocationID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAtpLocationID);
                this.columnAtpLocationName = new global::System.Data.DataColumn("AtpLocationName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAtpLocationName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCleaningOrderID}, true));
                this.columnCleaningOrderID.AutoIncrement = true;
                this.columnCleaningOrderID.AllowDBNull = false;
                this.columnCleaningOrderID.ReadOnly = true;
                this.columnCleaningOrderID.Unique = true;
                this.columnCompanyID.AllowDBNull = false;
                this.columnCleaningOrderReference.ReadOnly = true;
                this.columnCleaningOrderReference.MaxLength = 255;
                this.columnReference.MaxLength = 50;
                this.columnCleaningStationName.MaxLength = 50;
                this.columnCleaningDriverFullName.ReadOnly = true;
                this.columnCleaningDriverFullName.MaxLength = 101;
                this.columnCleaningUserFullName.ReadOnly = true;
                this.columnCleaningUserFullName.MaxLength = 101;
                this.columnSeals.ReadOnly = true;
                this.columnSeals.MaxLength = 2147483647;
                this.columnRemark.MaxLength = 2147483647;
                this.columnIsMilliport.AllowDBNull = false;
                this.columnIsAtp.AllowDBNull = false;
                this.columnIsAllertec.AllowDBNull = false;
                this.columnNatureOfProduct.ReadOnly = true;
                this.columnNatureOfProduct.MaxLength = 2147483647;
                this.columnNewProductName.MaxLength = 50;
                this.columnCleaningTruckInfo.ReadOnly = true;
                this.columnCleaningTruckInfo.MaxLength = 103;
                this.columnCleaningContainerTrailerInfo.ReadOnly = true;
                this.columnCleaningContainerTrailerInfo.MaxLength = 156;
                this.columnCustomerName.MaxLength = 100;
                this.columnCustomerStreet.ReadOnly = true;
                this.columnCustomerStreet.MaxLength = 100;
                this.columnCustomerCity.ReadOnly = true;
                this.columnCustomerCity.MaxLength = 126;
                this.columnProcedureEftcoItems.ReadOnly = true;
                this.columnProcedureEftcoItems.MaxLength = 2147483647;
                this.columnExtraEftcoItems.ReadOnly = true;
                this.columnExtraEftcoItems.MaxLength = 2147483647;
                this.columnAtpLocationName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public spEurotracsCleaningDocumentSelectRow NewspEurotracsCleaningDocumentSelectRow() {
                return ((spEurotracsCleaningDocumentSelectRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spEurotracsCleaningDocumentSelectRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(spEurotracsCleaningDocumentSelectRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spEurotracsCleaningDocumentSelectRowChanged != null)) {
                    this.spEurotracsCleaningDocumentSelectRowChanged(this, new spEurotracsCleaningDocumentSelectRowChangeEvent(((spEurotracsCleaningDocumentSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spEurotracsCleaningDocumentSelectRowChanging != null)) {
                    this.spEurotracsCleaningDocumentSelectRowChanging(this, new spEurotracsCleaningDocumentSelectRowChangeEvent(((spEurotracsCleaningDocumentSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spEurotracsCleaningDocumentSelectRowDeleted != null)) {
                    this.spEurotracsCleaningDocumentSelectRowDeleted(this, new spEurotracsCleaningDocumentSelectRowChangeEvent(((spEurotracsCleaningDocumentSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spEurotracsCleaningDocumentSelectRowDeleting != null)) {
                    this.spEurotracsCleaningDocumentSelectRowDeleting(this, new spEurotracsCleaningDocumentSelectRowChangeEvent(((spEurotracsCleaningDocumentSelectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemovespEurotracsCleaningDocumentSelectRow(spEurotracsCleaningDocumentSelectRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                EurotracsCleaningDocumentDataSet ds = new EurotracsCleaningDocumentDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spEurotracsCleaningDocumentSelectDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class spEurotracsCleaningDocumentCompartmentSelectRow : global::System.Data.DataRow {
            
            private spEurotracsCleaningDocumentCompartmentSelectDataTable tablespEurotracsCleaningDocumentCompartmentSelect;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal spEurotracsCleaningDocumentCompartmentSelectRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespEurotracsCleaningDocumentCompartmentSelect = ((spEurotracsCleaningDocumentCompartmentSelectDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int CleaningOrderCompartmentInfoID {
                get {
                    return ((int)(this[this.tablespEurotracsCleaningDocumentCompartmentSelect.CleaningOrderCompartmentInfoIDColumn]));
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentCompartmentSelect.CleaningOrderCompartmentInfoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int CleaningOrderID {
                get {
                    return ((int)(this[this.tablespEurotracsCleaningDocumentCompartmentSelect.CleaningOrderIDColumn]));
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentCompartmentSelect.CleaningOrderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public short CompanyID {
                get {
                    return ((short)(this[this.tablespEurotracsCleaningDocumentCompartmentSelect.CompanyIDColumn]));
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentCompartmentSelect.CompanyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public byte CompartmentNumber {
                get {
                    return ((byte)(this[this.tablespEurotracsCleaningDocumentCompartmentSelect.CompartmentNumberColumn]));
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentCompartmentSelect.CompartmentNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ProductMin1Name {
                get {
                    try {
                        return ((string)(this[this.tablespEurotracsCleaningDocumentCompartmentSelect.ProductMin1NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductMin1Name\' in table \'spEurotracsCleaningDocumentCompa" +
                                "rtmentSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentCompartmentSelect.ProductMin1NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ProductMin2Name {
                get {
                    try {
                        return ((string)(this[this.tablespEurotracsCleaningDocumentCompartmentSelect.ProductMin2NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductMin2Name\' in table \'spEurotracsCleaningDocumentCompa" +
                                "rtmentSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentCompartmentSelect.ProductMin2NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ProductMin3Name {
                get {
                    try {
                        return ((string)(this[this.tablespEurotracsCleaningDocumentCompartmentSelect.ProductMin3NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductMin3Name\' in table \'spEurotracsCleaningDocumentCompa" +
                                "rtmentSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentCompartmentSelect.ProductMin3NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string UnNumber {
                get {
                    try {
                        return ((string)(this[this.tablespEurotracsCleaningDocumentCompartmentSelect.UnNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnNumber\' in table \'spEurotracsCleaningDocumentCompartmentS" +
                                "elect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentCompartmentSelect.UnNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsProductMin1NameNull() {
                return this.IsNull(this.tablespEurotracsCleaningDocumentCompartmentSelect.ProductMin1NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetProductMin1NameNull() {
                this[this.tablespEurotracsCleaningDocumentCompartmentSelect.ProductMin1NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsProductMin2NameNull() {
                return this.IsNull(this.tablespEurotracsCleaningDocumentCompartmentSelect.ProductMin2NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetProductMin2NameNull() {
                this[this.tablespEurotracsCleaningDocumentCompartmentSelect.ProductMin2NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsProductMin3NameNull() {
                return this.IsNull(this.tablespEurotracsCleaningDocumentCompartmentSelect.ProductMin3NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetProductMin3NameNull() {
                this[this.tablespEurotracsCleaningDocumentCompartmentSelect.ProductMin3NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsUnNumberNull() {
                return this.IsNull(this.tablespEurotracsCleaningDocumentCompartmentSelect.UnNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetUnNumberNull() {
                this[this.tablespEurotracsCleaningDocumentCompartmentSelect.UnNumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class spEurotracsCleaningDocumentSelectRow : global::System.Data.DataRow {
            
            private spEurotracsCleaningDocumentSelectDataTable tablespEurotracsCleaningDocumentSelect;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal spEurotracsCleaningDocumentSelectRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespEurotracsCleaningDocumentSelect = ((spEurotracsCleaningDocumentSelectDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int CleaningOrderID {
                get {
                    return ((int)(this[this.tablespEurotracsCleaningDocumentSelect.CleaningOrderIDColumn]));
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentSelect.CleaningOrderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public short CompanyID {
                get {
                    return ((short)(this[this.tablespEurotracsCleaningDocumentSelect.CompanyIDColumn]));
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentSelect.CompanyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CleaningOrderReference {
                get {
                    try {
                        return ((string)(this[this.tablespEurotracsCleaningDocumentSelect.CleaningOrderReferenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CleaningOrderReference\' in table \'spEurotracsCleaningDocume" +
                                "ntSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentSelect.CleaningOrderReferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Reference {
                get {
                    try {
                        return ((string)(this[this.tablespEurotracsCleaningDocumentSelect.ReferenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reference\' in table \'spEurotracsCleaningDocumentSelect\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentSelect.ReferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int CleaningStationID {
                get {
                    try {
                        return ((int)(this[this.tablespEurotracsCleaningDocumentSelect.CleaningStationIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CleaningStationID\' in table \'spEurotracsCleaningDocumentSel" +
                                "ect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentSelect.CleaningStationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CleaningStationName {
                get {
                    try {
                        return ((string)(this[this.tablespEurotracsCleaningDocumentSelect.CleaningStationNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CleaningStationName\' in table \'spEurotracsCleaningDocumentS" +
                                "elect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentSelect.CleaningStationNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int CleaningDriverID {
                get {
                    try {
                        return ((int)(this[this.tablespEurotracsCleaningDocumentSelect.CleaningDriverIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CleaningDriverID\' in table \'spEurotracsCleaningDocumentSele" +
                                "ct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentSelect.CleaningDriverIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CleaningDriverFullName {
                get {
                    try {
                        return ((string)(this[this.tablespEurotracsCleaningDocumentSelect.CleaningDriverFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CleaningDriverFullName\' in table \'spEurotracsCleaningDocume" +
                                "ntSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentSelect.CleaningDriverFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime CleaningStartDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespEurotracsCleaningDocumentSelect.CleaningStartDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CleaningStartDate\' in table \'spEurotracsCleaningDocumentSel" +
                                "ect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentSelect.CleaningStartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime CleaningStopDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespEurotracsCleaningDocumentSelect.CleaningStopDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CleaningStopDate\' in table \'spEurotracsCleaningDocumentSele" +
                                "ct\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentSelect.CleaningStopDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long CleaningUserID {
                get {
                    try {
                        return ((long)(this[this.tablespEurotracsCleaningDocumentSelect.CleaningUserIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CleaningUserID\' in table \'spEurotracsCleaningDocumentSelect" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentSelect.CleaningUserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CleaningUserFullName {
                get {
                    try {
                        return ((string)(this[this.tablespEurotracsCleaningDocumentSelect.CleaningUserFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CleaningUserFullName\' in table \'spEurotracsCleaningDocument" +
                                "Select\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentSelect.CleaningUserFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Seals {
                get {
                    try {
                        return ((string)(this[this.tablespEurotracsCleaningDocumentSelect.SealsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Seals\' in table \'spEurotracsCleaningDocumentSelect\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentSelect.SealsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CO2 {
                get {
                    try {
                        return ((decimal)(this[this.tablespEurotracsCleaningDocumentSelect.CO2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CO2\' in table \'spEurotracsCleaningDocumentSelect\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentSelect.CO2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Remark {
                get {
                    try {
                        return ((string)(this[this.tablespEurotracsCleaningDocumentSelect.RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remark\' in table \'spEurotracsCleaningDocumentSelect\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentSelect.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMilliport {
                get {
                    return ((bool)(this[this.tablespEurotracsCleaningDocumentSelect.IsMilliportColumn]));
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentSelect.IsMilliportColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAtp {
                get {
                    return ((bool)(this[this.tablespEurotracsCleaningDocumentSelect.IsAtpColumn]));
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentSelect.IsAtpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAllertec {
                get {
                    return ((bool)(this[this.tablespEurotracsCleaningDocumentSelect.IsAllertecColumn]));
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentSelect.IsAllertecColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string NatureOfProduct {
                get {
                    try {
                        return ((string)(this[this.tablespEurotracsCleaningDocumentSelect.NatureOfProductColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NatureOfProduct\' in table \'spEurotracsCleaningDocumentSelec" +
                                "t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentSelect.NatureOfProductColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string NewProductName {
                get {
                    try {
                        return ((string)(this[this.tablespEurotracsCleaningDocumentSelect.NewProductNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NewProductName\' in table \'spEurotracsCleaningDocumentSelect" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentSelect.NewProductNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CleaningTruckInfo {
                get {
                    try {
                        return ((string)(this[this.tablespEurotracsCleaningDocumentSelect.CleaningTruckInfoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CleaningTruckInfo\' in table \'spEurotracsCleaningDocumentSel" +
                                "ect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentSelect.CleaningTruckInfoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CleaningContainerTrailerInfo {
                get {
                    try {
                        return ((string)(this[this.tablespEurotracsCleaningDocumentSelect.CleaningContainerTrailerInfoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CleaningContainerTrailerInfo\' in table \'spEurotracsCleaning" +
                                "DocumentSelect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentSelect.CleaningContainerTrailerInfoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tablespEurotracsCleaningDocumentSelect.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'spEurotracsCleaningDocumentSelect\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentSelect.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CustomerStreet {
                get {
                    try {
                        return ((string)(this[this.tablespEurotracsCleaningDocumentSelect.CustomerStreetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerStreet\' in table \'spEurotracsCleaningDocumentSelect" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentSelect.CustomerStreetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CustomerCity {
                get {
                    try {
                        return ((string)(this[this.tablespEurotracsCleaningDocumentSelect.CustomerCityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerCity\' in table \'spEurotracsCleaningDocumentSelect\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentSelect.CustomerCityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ProcedureEftcoItems {
                get {
                    try {
                        return ((string)(this[this.tablespEurotracsCleaningDocumentSelect.ProcedureEftcoItemsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProcedureEftcoItems\' in table \'spEurotracsCleaningDocumentS" +
                                "elect\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentSelect.ProcedureEftcoItemsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ExtraEftcoItems {
                get {
                    try {
                        return ((string)(this[this.tablespEurotracsCleaningDocumentSelect.ExtraEftcoItemsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtraEftcoItems\' in table \'spEurotracsCleaningDocumentSelec" +
                                "t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentSelect.ExtraEftcoItemsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal AtpResult {
                get {
                    try {
                        return ((decimal)(this[this.tablespEurotracsCleaningDocumentSelect.AtpResultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AtpResult\' in table \'spEurotracsCleaningDocumentSelect\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentSelect.AtpResultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public byte AtpLocationID {
                get {
                    try {
                        return ((byte)(this[this.tablespEurotracsCleaningDocumentSelect.AtpLocationIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AtpLocationID\' in table \'spEurotracsCleaningDocumentSelect\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentSelect.AtpLocationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string AtpLocationName {
                get {
                    try {
                        return ((string)(this[this.tablespEurotracsCleaningDocumentSelect.AtpLocationNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AtpLocationName\' in table \'spEurotracsCleaningDocumentSelec" +
                                "t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespEurotracsCleaningDocumentSelect.AtpLocationNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCleaningOrderReferenceNull() {
                return this.IsNull(this.tablespEurotracsCleaningDocumentSelect.CleaningOrderReferenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCleaningOrderReferenceNull() {
                this[this.tablespEurotracsCleaningDocumentSelect.CleaningOrderReferenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsReferenceNull() {
                return this.IsNull(this.tablespEurotracsCleaningDocumentSelect.ReferenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetReferenceNull() {
                this[this.tablespEurotracsCleaningDocumentSelect.ReferenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCleaningStationIDNull() {
                return this.IsNull(this.tablespEurotracsCleaningDocumentSelect.CleaningStationIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCleaningStationIDNull() {
                this[this.tablespEurotracsCleaningDocumentSelect.CleaningStationIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCleaningStationNameNull() {
                return this.IsNull(this.tablespEurotracsCleaningDocumentSelect.CleaningStationNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCleaningStationNameNull() {
                this[this.tablespEurotracsCleaningDocumentSelect.CleaningStationNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCleaningDriverIDNull() {
                return this.IsNull(this.tablespEurotracsCleaningDocumentSelect.CleaningDriverIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCleaningDriverIDNull() {
                this[this.tablespEurotracsCleaningDocumentSelect.CleaningDriverIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCleaningDriverFullNameNull() {
                return this.IsNull(this.tablespEurotracsCleaningDocumentSelect.CleaningDriverFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCleaningDriverFullNameNull() {
                this[this.tablespEurotracsCleaningDocumentSelect.CleaningDriverFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCleaningStartDateNull() {
                return this.IsNull(this.tablespEurotracsCleaningDocumentSelect.CleaningStartDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCleaningStartDateNull() {
                this[this.tablespEurotracsCleaningDocumentSelect.CleaningStartDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCleaningStopDateNull() {
                return this.IsNull(this.tablespEurotracsCleaningDocumentSelect.CleaningStopDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCleaningStopDateNull() {
                this[this.tablespEurotracsCleaningDocumentSelect.CleaningStopDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCleaningUserIDNull() {
                return this.IsNull(this.tablespEurotracsCleaningDocumentSelect.CleaningUserIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCleaningUserIDNull() {
                this[this.tablespEurotracsCleaningDocumentSelect.CleaningUserIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCleaningUserFullNameNull() {
                return this.IsNull(this.tablespEurotracsCleaningDocumentSelect.CleaningUserFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCleaningUserFullNameNull() {
                this[this.tablespEurotracsCleaningDocumentSelect.CleaningUserFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSealsNull() {
                return this.IsNull(this.tablespEurotracsCleaningDocumentSelect.SealsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSealsNull() {
                this[this.tablespEurotracsCleaningDocumentSelect.SealsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCO2Null() {
                return this.IsNull(this.tablespEurotracsCleaningDocumentSelect.CO2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCO2Null() {
                this[this.tablespEurotracsCleaningDocumentSelect.CO2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsRemarkNull() {
                return this.IsNull(this.tablespEurotracsCleaningDocumentSelect.RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetRemarkNull() {
                this[this.tablespEurotracsCleaningDocumentSelect.RemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsNatureOfProductNull() {
                return this.IsNull(this.tablespEurotracsCleaningDocumentSelect.NatureOfProductColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetNatureOfProductNull() {
                this[this.tablespEurotracsCleaningDocumentSelect.NatureOfProductColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsNewProductNameNull() {
                return this.IsNull(this.tablespEurotracsCleaningDocumentSelect.NewProductNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetNewProductNameNull() {
                this[this.tablespEurotracsCleaningDocumentSelect.NewProductNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCleaningTruckInfoNull() {
                return this.IsNull(this.tablespEurotracsCleaningDocumentSelect.CleaningTruckInfoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCleaningTruckInfoNull() {
                this[this.tablespEurotracsCleaningDocumentSelect.CleaningTruckInfoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCleaningContainerTrailerInfoNull() {
                return this.IsNull(this.tablespEurotracsCleaningDocumentSelect.CleaningContainerTrailerInfoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCleaningContainerTrailerInfoNull() {
                this[this.tablespEurotracsCleaningDocumentSelect.CleaningContainerTrailerInfoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tablespEurotracsCleaningDocumentSelect.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCustomerNameNull() {
                this[this.tablespEurotracsCleaningDocumentSelect.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCustomerStreetNull() {
                return this.IsNull(this.tablespEurotracsCleaningDocumentSelect.CustomerStreetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCustomerStreetNull() {
                this[this.tablespEurotracsCleaningDocumentSelect.CustomerStreetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCustomerCityNull() {
                return this.IsNull(this.tablespEurotracsCleaningDocumentSelect.CustomerCityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCustomerCityNull() {
                this[this.tablespEurotracsCleaningDocumentSelect.CustomerCityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsProcedureEftcoItemsNull() {
                return this.IsNull(this.tablespEurotracsCleaningDocumentSelect.ProcedureEftcoItemsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetProcedureEftcoItemsNull() {
                this[this.tablespEurotracsCleaningDocumentSelect.ProcedureEftcoItemsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsExtraEftcoItemsNull() {
                return this.IsNull(this.tablespEurotracsCleaningDocumentSelect.ExtraEftcoItemsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetExtraEftcoItemsNull() {
                this[this.tablespEurotracsCleaningDocumentSelect.ExtraEftcoItemsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAtpResultNull() {
                return this.IsNull(this.tablespEurotracsCleaningDocumentSelect.AtpResultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAtpResultNull() {
                this[this.tablespEurotracsCleaningDocumentSelect.AtpResultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAtpLocationIDNull() {
                return this.IsNull(this.tablespEurotracsCleaningDocumentSelect.AtpLocationIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAtpLocationIDNull() {
                this[this.tablespEurotracsCleaningDocumentSelect.AtpLocationIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAtpLocationNameNull() {
                return this.IsNull(this.tablespEurotracsCleaningDocumentSelect.AtpLocationNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAtpLocationNameNull() {
                this[this.tablespEurotracsCleaningDocumentSelect.AtpLocationNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class spEurotracsCleaningDocumentCompartmentSelectRowChangeEvent : global::System.EventArgs {
            
            private spEurotracsCleaningDocumentCompartmentSelectRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public spEurotracsCleaningDocumentCompartmentSelectRowChangeEvent(spEurotracsCleaningDocumentCompartmentSelectRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public spEurotracsCleaningDocumentCompartmentSelectRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class spEurotracsCleaningDocumentSelectRowChangeEvent : global::System.EventArgs {
            
            private spEurotracsCleaningDocumentSelectRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public spEurotracsCleaningDocumentSelectRowChangeEvent(spEurotracsCleaningDocumentSelectRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public spEurotracsCleaningDocumentSelectRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace WebApplication1.Data.EurotracsCleaningDocumentDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class spEurotracsCleaningDocumentCompartmentSelectTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public spEurotracsCleaningDocumentCompartmentSelectTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spEurotracsCleaningDocumentCompartmentSelect";
            tableMapping.ColumnMappings.Add("CleaningOrderCompartmentInfoID", "CleaningOrderCompartmentInfoID");
            tableMapping.ColumnMappings.Add("CleaningOrderID", "CleaningOrderID");
            tableMapping.ColumnMappings.Add("CompanyID", "CompanyID");
            tableMapping.ColumnMappings.Add("CompartmentNumber", "CompartmentNumber");
            tableMapping.ColumnMappings.Add("ProductMin1Name", "ProductMin1Name");
            tableMapping.ColumnMappings.Add("ProductMin2Name", "ProductMin2Name");
            tableMapping.ColumnMappings.Add("ProductMin3Name", "ProductMin3Name");
            tableMapping.ColumnMappings.Add("UnNumber", "UnNumber");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "XpoProvider=MSSqlServer;Data Source=20.160.57.109;User ID=Eurotracs;Password=P@ssw0rd;Initial Catalog=ETransDEV;Persist Security Info=true; TrustServerCertificate=true";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "report.spEurotracsCleaningDocumentCompartmentSelect";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CleaningOrderID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyID", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 5, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EurotracsCleaningDocumentDataSet.spEurotracsCleaningDocumentCompartmentSelectDataTable dataTable, global::System.Nullable<int> CleaningOrderID, global::System.Nullable<short> CompanyID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((CleaningOrderID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CleaningOrderID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((CompanyID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((short)(CompanyID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EurotracsCleaningDocumentDataSet.spEurotracsCleaningDocumentCompartmentSelectDataTable GetData(global::System.Nullable<int> CleaningOrderID, global::System.Nullable<short> CompanyID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((CleaningOrderID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CleaningOrderID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((CompanyID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((short)(CompanyID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            EurotracsCleaningDocumentDataSet.spEurotracsCleaningDocumentCompartmentSelectDataTable dataTable = new EurotracsCleaningDocumentDataSet.spEurotracsCleaningDocumentCompartmentSelectDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class spEurotracsCleaningDocumentSelectTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public spEurotracsCleaningDocumentSelectTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spEurotracsCleaningDocumentSelect";
            tableMapping.ColumnMappings.Add("CleaningOrderID", "CleaningOrderID");
            tableMapping.ColumnMappings.Add("CompanyID", "CompanyID");
            tableMapping.ColumnMappings.Add("CleaningOrderReference", "CleaningOrderReference");
            tableMapping.ColumnMappings.Add("Reference", "Reference");
            tableMapping.ColumnMappings.Add("CleaningStationID", "CleaningStationID");
            tableMapping.ColumnMappings.Add("CleaningStationName", "CleaningStationName");
            tableMapping.ColumnMappings.Add("CleaningDriverID", "CleaningDriverID");
            tableMapping.ColumnMappings.Add("CleaningDriverFullName", "CleaningDriverFullName");
            tableMapping.ColumnMappings.Add("CleaningStartDate", "CleaningStartDate");
            tableMapping.ColumnMappings.Add("CleaningStopDate", "CleaningStopDate");
            tableMapping.ColumnMappings.Add("CleaningUserID", "CleaningUserID");
            tableMapping.ColumnMappings.Add("CleaningUserFullName", "CleaningUserFullName");
            tableMapping.ColumnMappings.Add("Seals", "Seals");
            tableMapping.ColumnMappings.Add("CO2", "CO2");
            tableMapping.ColumnMappings.Add("Remark", "Remark");
            tableMapping.ColumnMappings.Add("IsMilliport", "IsMilliport");
            tableMapping.ColumnMappings.Add("IsAtp", "IsAtp");
            tableMapping.ColumnMappings.Add("IsAllertec", "IsAllertec");
            tableMapping.ColumnMappings.Add("NatureOfProduct", "NatureOfProduct");
            tableMapping.ColumnMappings.Add("NewProductName", "NewProductName");
            tableMapping.ColumnMappings.Add("CleaningTruckInfo", "CleaningTruckInfo");
            tableMapping.ColumnMappings.Add("CleaningContainerTrailerInfo", "CleaningContainerTrailerInfo");
            tableMapping.ColumnMappings.Add("CustomerName", "CustomerName");
            tableMapping.ColumnMappings.Add("CustomerStreet", "CustomerStreet");
            tableMapping.ColumnMappings.Add("CustomerCity", "CustomerCity");
            tableMapping.ColumnMappings.Add("ProcedureEftcoItems", "ProcedureEftcoItems");
            tableMapping.ColumnMappings.Add("ExtraEftcoItems", "ExtraEftcoItems");
            tableMapping.ColumnMappings.Add("AtpResult", "AtpResult");
            tableMapping.ColumnMappings.Add("AtpLocationID", "AtpLocationID");
            tableMapping.ColumnMappings.Add("AtpLocationName", "AtpLocationName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "XpoProvider=MSSqlServer;Data Source=20.160.57.109;User ID=Eurotracs;Password=P@ssw0rd;Initial Catalog=ETransDEV;Persist Security Info=true; TrustServerCertificate=true";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "report.spEurotracsCleaningDocumentSelect";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CleaningOrderID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyID", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 5, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(EurotracsCleaningDocumentDataSet.spEurotracsCleaningDocumentSelectDataTable dataTable, global::System.Nullable<int> CleaningOrderID, global::System.Nullable<short> CompanyID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((CleaningOrderID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CleaningOrderID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((CompanyID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((short)(CompanyID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual EurotracsCleaningDocumentDataSet.spEurotracsCleaningDocumentSelectDataTable GetData(global::System.Nullable<int> CleaningOrderID, global::System.Nullable<short> CompanyID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((CleaningOrderID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(CleaningOrderID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((CompanyID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((short)(CompanyID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            EurotracsCleaningDocumentDataSet.spEurotracsCleaningDocumentSelectDataTable dataTable = new EurotracsCleaningDocumentDataSet.spEurotracsCleaningDocumentSelectDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(EurotracsCleaningDocumentDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(EurotracsCleaningDocumentDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(EurotracsCleaningDocumentDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(EurotracsCleaningDocumentDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591